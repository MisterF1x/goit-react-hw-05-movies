{"version":3,"file":"static/js/541.6874feff.chunk.js","mappings":"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","sources":["components/Cast/Cast.js","components/Cast/Cast.styled.js","components/Loading/Loading.styled.js","components/Loading/Loading.js","components/MovieCard/MovieCard.styled.js","constant/constant.js","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\nimport { StyledCastUl, TitleCastStyled } from './Cast.styled';\nimport { SectionStyled } from 'components/MovieCard/MovieCard.styled';\nimport { ERROR_MSG } from 'constant/constant';\nimport { Loading } from 'components/Loading/Loading';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [casts, setCasts] = useState([]);\n  const [error, setError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    const getMovieCasts = async id => {\n      try {\n        setIsLoading(true);\n        const { cast } = await fetchMovieCast(id);\n        setCasts(cast);\n        setIsLoading(false);\n      } catch (error) {\n        setError(true);\n        console.error(error.msg);\n      }\n    };\n    getMovieCasts(movieId);\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading ? (\n        <Loading />\n      ) : error ? (\n        <div>{ERROR_MSG['msg']}</div>\n      ) : (\n        <SectionStyled>\n          <TitleCastStyled>Movie actors</TitleCastStyled>\n          <StyledCastUl>\n            {casts.length ? (\n              casts.map(({ original_name, profile_path, character }, idx) => (\n                <li key={idx}>\n                  <img\n                    src={\n                      profile_path\n                        ? `https://image.tmdb.org/t/p/w200${profile_path}`\n                        : 'https://via.placeholder.com/200x300?text=No+Image'\n                    }\n                    alt={original_name}\n                  />\n                  <p>{original_name}</p>\n                  <p>{character}</p>\n                </li>\n              ))\n            ) : (\n              <div>Actors not found!</div>\n            )}\n          </StyledCastUl>\n        </SectionStyled>\n      )}\n    </>\n  );\n};\nexport default Cast;\n","import styled from '@emotion/styled';\n\nexport const TitleCastStyled = styled.h2`\n  text-align: center;\n  margin-bottom: 20px;\n`;\nexport const StyledCastUl = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));\n  grid-gap: 10px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import { keyframes } from '@emotion/react';\nimport styled from '@emotion/styled';\n\nconst fadeInOut = keyframes`\n  0%, 100% {\n    opacity: 0\n  }\n  50% {\n    opacity: 1;\n  }\n\n`;\n\nexport const LoadingStyled = styled.div`\n  font-weight: 700;\n  color: ${p => p.theme.colors.accent};\n  text-align: center;\n  opacity: 1;\n  animation: ${fadeInOut} 2s infinite;\n`;\n","import { LoadingStyled } from './Loading.styled';\n\nexport const Loading = () => {\n  return <LoadingStyled>Loading...</LoadingStyled>;\n};\n","import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const SectionStyled = styled.section`\n  padding-top: 30px;\n`;\nexport const WrapperStyled = styled.div`\n  display: flex;\n  gap: 30px;\n  padding-bottom: 30px;\n`;\nexport const GroupBlockStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 30px;\n  & h1 {\n    font-size: 28px;\n    color: ${p => p.theme.colors.accent};\n  }\n  & h2 {\n    font-size: 22px;\n    color: #666;\n  }\n`;\n\nexport const InfoNavStyled = styled.nav`\n  padding: 20px 0;\n  border-bottom: 1px solid #d2d2d2;\n  border-top: 1px solid #d2d2d2;\n  & > h3 {\n    margin-bottom: 10px;\n  }\n`;\nexport const BackLinkStyled = styled(Link)`\n  &::before {\n    content: '\\u2190';\n    margin-right: 8px;\n  }\n`;\nexport const RatingStyled = styled.span`\n  font-weight: 700;\n  color: ${({ ratingColor }) => {\n    if (ratingColor < 40) return 'orangered';\n    if (ratingColor >= 40 && ratingColor < 70) return '#F6BA6F';\n    if (ratingColor >= 70) return 'green';\n  }};\n`;\n","export const IconSize = Object.freeze({\n  sm: '16px',\n  md: '24px',\n  lg: '32px',\n});\nexport const ERROR_MSG = Object.freeze({\n  empty: 'This field is required and cannot be empty',\n  msg: 'Oops something going wrong! Try again later!',\n});\nexport const toastErrStyle = {\n  style: {\n    background: '#FA9884',\n    color: '#fff',\n  },\n};\n","import axios from 'axios';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst AUTH_KEY = '28027c59bdca8e7ee28a28ecaf4d25ca';\n\nexport const fetchTodayTrendMovies = async page => {\n  const options = {\n    params: {\n      api_key: AUTH_KEY,\n      page,\n    },\n  };\n  const { data } = await axios('/trending/movie/day', options);\n  return data;\n};\nexport const fetchMovieById = async id => {\n  const options = {\n    params: {\n      api_key: AUTH_KEY,\n    },\n  };\n  const { data } = await axios(`/movie/${id}`, options);\n  return data;\n};\nexport const fetchMovieReviewById = async id => {\n  const options = {\n    params: {\n      api_key: AUTH_KEY,\n    },\n  };\n  const { data } = await axios(`/movie/${id}/reviews`, options);\n  return data;\n};\nexport const fetchMovieCast = async id => {\n  const options = {\n    params: {\n      api_key: AUTH_KEY,\n    },\n  };\n  const { data } = await axios(`/movie/${id}/credits`, options);\n  return data;\n};\nexport const fetchMovieByQuery = async query => {\n  const options = {\n    params: {\n      api_key: AUTH_KEY,\n      query,\n    },\n  };\n  const { data } = await axios(`/search/movie`, options);\n  return data;\n};\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","casts","setCasts","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","getMovieCasts","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","_yield$fetchMovieCast","cast","wrap","_context","prev","next","fetchMovieCast","sent","t0","console","msg","stop","_x","apply","arguments","_jsx","_Fragment","children","Loading","ERROR_MSG","_jsxs","SectionStyled","TitleCastStyled","StyledCastUl","length","map","_ref2","idx","original_name","profile_path","character","src","concat","alt","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","fadeInOut","keyframes","LoadingStyled","p","theme","colors","accent","WrapperStyled","GroupBlockStyled","_templateObject3","InfoNavStyled","_templateObject4","BackLinkStyled","Link","_templateObject5","RatingStyled","_templateObject6","ratingColor","IconSize","Object","freeze","sm","md","lg","empty","toastErrStyle","style","background","color","axios","AUTH_KEY","fetchTodayTrendMovies","page","options","_yield$axios","data","params","api_key","abrupt","fetchMovieById","_callee2","_yield$axios2","_context2","_x2","fetchMovieReviewById","_ref3","_callee3","_yield$axios3","_context3","_x3","_ref4","_callee4","_yield$axios4","_context4","_x4","fetchMovieByQuery","_ref5","_callee5","query","_yield$axios5","_context5","_x5"],"sourceRoot":""}